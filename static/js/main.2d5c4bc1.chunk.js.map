{"version":3,"sources":["components/plannerComponents/plannerQuote.js","components/plannerComponents/pomodoro/TimerProvider.js","components/plannerComponents/pomodoro/Title.js","components/plannerComponents/pomodoro/Timer.js","components/plannerComponents/pomodoro/Button.js","components/plannerComponents/pomodoro/TimeController.js","components/plannerComponents/pomodoro/ButtonController.js","services/firebase.js","components/plannerComponents/PlannerPomo.js","components/plannerComponents/pomodoro/Progress.js","components/plannerComponents/PlannerBody.js","components/PnL.js","data/pnlCalculator.js","components/pages/Home.js","components/Button.js","components/Navbar.js","components/pages/Planner.js","components/pages/Signup.js","components/pages/Journal.js","App.js","features/counter/counterSlice.js","app/store.js","index.js"],"names":["PlannerQuote","className","TimeContext","createContext","TimeProvider","props","useState","currIndex","currentProgress","setCurrentProgress","session","break","mode","time","currentTime","startingTime","active","name","progress","timer","setTimer","Provider","value","children","Title","title","Timer","id","minutes","Math","floor","seconds","formatTime","Button","buttonId","onClick","actionClick","type","TimeController","useContext","changeTimer","operator","labelId","label","lengthId","ButtonController","React","console","log","myRef","current","pause","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Pomodoro","beep","useRef","useEffect","interval","setInterval","clearInterval","play","firestore","collection","doc","String","get","then","query","currLog","data","ref","update","playPause","playing","durationId","preload","src","Progress","Array","fill","map","item","index","key","e","preventDefault","setActive","PlannerBody","planner","setPlanner","note","setNote","a","axios","response","localStorage","setItem","postal","getAddress","address","getItem","unsubscribe","onSnapshot","snapshot","prevPlanner","docs","unsub","activeNote","forEach","extra","refreshData","plan","onChange","currentId","newProgress","newPlanner","onChangePlanner","target","onBlur","toString","onChangeProgress","required","defaultValue","newNote","onNoteChange","PnL","entry","stopLoss","takeProfit","marketPrice","percentGain","percentLoss","amountUSD","amount","userRequest","setUserRequest","userGain","userLoss","userLiquidation","userPnl","setUserPnl","buy","sell","orderType","setOrderType","handleNumberChange","parseFloat","orderClick","orderBuyStyle","orderSellStyle","curProfit","curStoploss","tp","round","abs","stoploss","cal","gainPnl","stopPnl","amountChange","window","addEventListener","currentPrice","min","max","step","Home","STYLES","SIZES","buttonStyle","buttonSize","checkButtonStyle","includes","checkButtonSize","to","Navbar","click","setClick","button","setButton","closeMobileMenu","showButton","innerWidth","Planner","uiConfig","signInFlow","signInSuccessUrl","signInOptions","auth","GoogleAuthProvider","PROVIDER_ID","EmailAuthProvider","Signup","firebaseAuth","Journal","App","path","exact","component","render","counterSlice","createSlice","initialState","reducers","increment","state","decrement","incrementByAmount","action","payload","actions","configureStore","reducer","counter","counterReducer","ReactDOM","store","document","getElementById"],"mappings":"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","file":"static/js/main.2d5c4bc1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./plannerBody.css\";\r\n\r\nexport const PlannerQuote = () => {\r\n  return (\r\n    <div className=\"planner-quote-body\">\r\n      <h2 className=\"planner-quote-h2\">\r\n        \"Take OPTIMISTIC bets. Don't be PESSIMISTIC. Control your MIND\"\r\n      </h2>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, createContext } from \"react\";\r\nimport \"../plannerPomo.css\";\r\n\r\n// Sending props to other components\r\nexport const TimeContext = createContext();\r\n\r\nexport const TimeProvider = (props) => {\r\n  const [currentProgress, setCurrentProgress] = useState({\r\n    currIndex: 1,\r\n  });\r\n\r\n  const [timer, setTimer] = useState({\r\n    session: 2700,\r\n    break: 300,\r\n    mode: \"session\",\r\n    time: { currentTime: 2700, startingTime: 300 },\r\n    active: false,\r\n    name: \"Pomodoro Timer\",\r\n    progress: 0,\r\n  });\r\n\r\n  return (\r\n    <TimeContext.Provider\r\n      value={[timer, setTimer, currentProgress, setCurrentProgress]}>\r\n      {props.children}\r\n    </TimeContext.Provider>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./Title.css\";\r\nexport const Title = (props) => {\r\n  return (\r\n    <div>\r\n      <header>\r\n        <h1 className=\"title\">{props.title}</h1>\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport \"./Timer.css\"\r\nexport const Timer = (props) => {\r\n\r\n    // converts seconds to min:sec string format\r\n    function formatTime(time){ \r\n        let minutes = Math.floor(time / 60);\r\n        if(minutes < 10){\r\n            minutes = \"0\"+minutes\r\n        }\r\n        let seconds = Math.floor(time - minutes * 60);\r\n        if(seconds < 10){\r\n            seconds = \"0\"+seconds\r\n        }\r\n        return `${minutes}:${seconds}`;\r\n    }\r\n\r\n    return(\r\n    <div className=\"wrapper\">\r\n      <div className=\"counter\">\r\n        \r\n        <div id=\"time-left\">{formatTime(props.time.currentTime)}</div>\r\n        <span className=\"counterType\" id=\"timer-label\">{props.mode}</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\nimport \"./Button.css\"\r\nexport function Button(props) {\r\n    return(\r\n        <button id={props.buttonId} className=\"Button\" onClick={() => props.actionClick(props.type)}>\r\n            {props.children}\r\n        </button>\r\n    )\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { TimeContext } from \"./TimerProvider\";\r\nimport \"./TimeController.css\";\r\nimport { Button } from \"./Button\";\r\n\r\nexport function TimeController(props) {\r\n  const [timer, setTimer] = useContext(TimeContext);\r\n  // update session time / break time onClick\r\n  const changeTimer = (operator) => {\r\n    if (timer.mode === props.type) {\r\n      if (operator === \"decrement\" && timer[props.type] > 60) {\r\n        //if the current mode && the type are equal change the currentTime & startingTime\r\n        setTimer({\r\n          ...timer,\r\n          [props.type]: timer[props.type] - 60, // change session / break time\r\n          time: {\r\n            currentTime: timer[timer.mode] - 60,\r\n            startingTime: timer[timer.mode] - 60,\r\n          },\r\n        });\r\n      }\r\n      if (operator === \"increment\" && timer[props.type] < 3600) {\r\n        setTimer({\r\n          ...timer,\r\n          [props.type]: timer[props.type] + 60,\r\n          time: {\r\n            currentTime: timer[timer.mode] + 60,\r\n            startingTime: timer[timer.mode] + 60,\r\n          },\r\n        });\r\n      }\r\n    } else {\r\n      let time = timer.time;\r\n      if (operator === \"decrement\" && timer[props.type] > 60) {\r\n        //if the current mode && the type are equal change the currentTime & startingTime\r\n        setTimer({\r\n          ...timer,\r\n          [props.type]: timer[props.type] - 60, // change session / break time\r\n          time: time,\r\n        });\r\n      }\r\n      if (operator === \"increment\" && timer[props.type] < 3600) {\r\n        setTimer({\r\n          ...timer,\r\n          [props.type]: timer[props.type] + 60,\r\n          time: time,\r\n        });\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"TimeController\">\r\n      <div className=\"TimeController-button\">\r\n        <Button\r\n          actionClick={() => changeTimer(\"decrement\")}\r\n          className=\"controlButton\"\r\n          buttonId={`${props.type}-decrement`}>\r\n          -\r\n        </Button>\r\n        <Button\r\n          actionClick={() => changeTimer(\"increment\")}\r\n          className=\"controlButton\"\r\n          buttonId={`${props.type}-increment`}>\r\n          +\r\n        </Button>\r\n      </div>\r\n\r\n      <div className=\"wrapperDisplay\">\r\n        <span id={props.labelId} className=\"label\">\r\n          {props.label}\r\n        </span>\r\n        <span id={props.lengthId} className=\"time\">\r\n          {timer[props.type] / 60}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./ButtonController.css\";\r\nimport { TimeContext } from \"./TimerProvider\";\r\nimport { Button } from \"./Button\";\r\n\r\nexport function ButtonController(props) {\r\n  const [timer, setTimer] = React.useContext(TimeContext);\r\n\r\n  const resetTime = (sessionValue) => {\r\n    console.log(timer);\r\n    setTimer({\r\n      ...timer,\r\n      session: 1500,\r\n      break: 300,\r\n      mode: \"session\",\r\n      time: { currentTime: 1500, startingTime: 1500 },\r\n      active: false,\r\n      name: \"Pomodoro Timer\",\r\n      progress: 0,\r\n    });\r\n    props.myRef.current.pause();\r\n    props.myRef.current.currentTime = 0;\r\n  };\r\n\r\n  const setActive = () => {\r\n    setTimer({\r\n      ...timer,\r\n      active: !timer.active,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"ButtonController\">\r\n      <Button buttonId=\"reset\" type=\"reset\" actionClick={() => resetTime()}>\r\n        <i className=\"fas fa-undo-alt\"></i>\r\n      </Button>\r\n      <Button buttonId=\"start_stop\" type=\"play\" actionClick={() => setActive()}>\r\n        <i className={`fas ${timer.active ? \"fa-pause\" : \"fa-play\"}`}></i>\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCCQmaxvFQGI_YiBCaJFpxZnKmdG-bOG9o\",\r\n  authDomain: \"coin-casanova.firebaseapp.com\",\r\n  databaseURL: \"https://coin-casanova.firebaseio.com\",\r\n  projectId: \"coin-casanova\",\r\n  storageBucket: \"coin-casanova.appspot.com\",\r\n  messagingSenderId: \"286112267368\",\r\n  appId: \"1:286112267368:web:728eec7e7f68e7ba290fdd\",\r\n  measurementId: \"G-K5G1D4QD67\",\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;\r\n","import React, { useContext } from \"react\";\r\nimport \"../plannerComponents/plannerPomo.css\";\r\nimport { TimeContext } from \"./pomodoro/TimerProvider\";\r\nimport { Title } from \"./pomodoro/Title\";\r\nimport { Timer } from \"./pomodoro/Timer\";\r\nimport { TimeController } from \"./pomodoro/TimeController\";\r\nimport { ButtonController } from \"./pomodoro/ButtonController\";\r\nimport firebase from \"../../services/firebase\";\r\n\r\nconst Pomodoro = () => {\r\n  const [timer, setTimer, currentProgress] = useContext(TimeContext);\r\n\r\n  const { mode, time, name, active, progress } = timer;\r\n  const { currIndex } = currentProgress;\r\n  // create ref for the audio\r\n  const beep = React.useRef();\r\n\r\n  React.useEffect(() => {\r\n    if (timer.active && timer.time.currentTime > 0) {\r\n      const interval = setInterval(() => {\r\n        setTimer({\r\n          ...timer,\r\n          time: {\r\n            startingTime: timer.time.startingTime,\r\n            currentTime: timer.time.currentTime - 1,\r\n          },\r\n        });\r\n      }, 1000);\r\n      return () => clearInterval(interval);\r\n    } else if (timer.time.currentTime === 0) {\r\n      beep.current.play();\r\n      beep.current.currentTime = 0;\r\n      //    setTimeout(() => {\r\n      if (timer.mode === \"session\") {\r\n        setTimer({\r\n          ...timer,\r\n          time: {\r\n            currentTime: timer.break,\r\n            startingTime: timer.break,\r\n          },\r\n          mode: \"break\",\r\n        });\r\n      }\r\n      if (timer.mode === \"break\") {\r\n        setTimer({\r\n          ...timer,\r\n          time: {\r\n            currentTime: timer.session,\r\n            startingTime: timer.session,\r\n          },\r\n          mode: \"session\",\r\n          progress: timer.progress + 1,\r\n          active: !timer.active,\r\n        });\r\n\r\n        firebase\r\n          .firestore()\r\n          .collection(\"planner\")\r\n          .doc(String(currIndex))\r\n          .get()\r\n          .then((query) => {\r\n            const currLog = query.data().log;\r\n            query.ref.update({ log: currLog >= 4 ? 0 : currLog + 1 });\r\n          });\r\n      }\r\n      //    }, 2500);\r\n    }\r\n  }, [setTimer, timer]);\r\n\r\n  React.useEffect(() => {\r\n    if (timer.playPause) {\r\n      beep.current.pause();\r\n      beep.current.currentTime = 0;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"pomo-container\">\r\n      <div className=\"pomo\">\r\n        <Title title={name} />\r\n\r\n        <div>\r\n          <Timer mode={mode} time={time} />\r\n        </div>\r\n        <ButtonController playing={timer.active} myRef={beep} />\r\n\r\n        <div className=\"time-controller-split\">\r\n          <TimeController\r\n            durationId={timer.session}\r\n            type=\"session\"\r\n            label={\"Session\"}\r\n            lengthId={\"session-length\"}\r\n            labelId={\"session-label\"}\r\n          />\r\n          <TimeController\r\n            durationId={timer.break}\r\n            type=\"break\"\r\n            label={\"Break\"}\r\n            lengthId={\"break-length\"}\r\n            labelId={\"break-label\"}\r\n          />\r\n        </div>\r\n\r\n        <audio\r\n          id=\"beep\"\r\n          preload=\"auto\"\r\n          src=\"https://www.soundjay.com/human/sounds/applause-4.mp3\"\r\n          ref={beep}></audio>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pomodoro;\r\n","import React, { useContext } from \"react\";\r\nimport \"./Progress.css\";\r\nimport { TimeContext } from \"./TimerProvider\";\r\n\r\nexport const Progress = (props) => {\r\n  const [timer, setTimer, currentProgress, setCurrentProgress] = useContext(\r\n    TimeContext\r\n  );\r\n\r\n  // const { currIndex, currProgress1, currProgress2 } = currentProgress;\r\n\r\n  const setActive = (e, index) => {\r\n    e.preventDefault();\r\n    setTimer({\r\n      ...timer,\r\n      active: !timer.active,\r\n    });\r\n    setCurrentProgress({\r\n      ...currentProgress,\r\n      currIndex: index,\r\n    });\r\n  };\r\n\r\n  // filling the array of size 5 with \"true\" from index 0 to progress\r\n  let progress = new Array(4)\r\n    .fill(0)\r\n    .fill(true, 0, props.progress == null ? 0 : props.progress);\r\n  return (\r\n    <div className=\"progress-container\">\r\n      {progress.map((item, index) => (\r\n        <button\r\n          key={index}\r\n          className={`dot ${progress[index] ? \"completed\" : \"\"}`}\r\n          onClick={(e) => setActive(e, props.currIndex)}></button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../plannerComponents/plannerBody.css\";\r\nimport { PlannerQuote } from \"./plannerQuote\";\r\nimport Pomodoro from \"./PlannerPomo\";\r\nimport { Progress } from \"./pomodoro/Progress\";\r\nimport firebase from \"../../services/firebase\";\r\nimport axios from \"axios\";\r\n\r\nconst PlannerBody = () => {\r\n  const [planner, setPlanner] = useState([]);\r\n  const [note, setNote] = useState([]);\r\n  const [isLoading, setLoading] = useState(false);\r\n  const onChangeProgress = (currentId, newProgress) => {\r\n    var address = localStorage.getItem(\"address\");\r\n    firebase\r\n      .firestore()\r\n      .collection(address === \"33781\" ? \"planner\" : \"ngan\")\r\n      .doc(currentId.toString())\r\n      .get()\r\n      .then((query) => {\r\n        query.ref.update({ progress: newProgress });\r\n      });\r\n  };\r\n\r\n  const onChangePlanner = (currentId, newProgress) => {\r\n    var currPlanner = planner;\r\n\r\n    const newPlanner = currPlanner.map((item) => ({\r\n      id: item.id,\r\n      log: item.log,\r\n      progress: item.id === currentId ? newProgress : item.progress,\r\n      title: item.title,\r\n    }));\r\n    setPlanner(newPlanner);\r\n  };\r\n\r\n  const onNoteChange = (currentId, newNote) => {\r\n    const activeNote = note.map((item) => ({\r\n      id: item.id,\r\n      extra: item.id === currentId ? newNote : item.extra,\r\n    }));\r\n\r\n    firebase\r\n      .firestore()\r\n      .collection(\"note\")\r\n      .doc(String(currentId))\r\n      .get()\r\n      .then((query) => {\r\n        query.ref.update({ extra: newNote });\r\n      });\r\n  };\r\n\r\n  async function getAddress() {\r\n    const response = await axios(\"https://geolocation-db.com/json/\");\r\n    localStorage.setItem(\"address\", response.data.postal);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAddress();\r\n    const address = localStorage.getItem(\"address\");\r\n    const unsubscribe = firebase\r\n      .firestore()\r\n      .collection(address === \"33781\" ? \"planner\" : \"ngan\")\r\n      .onSnapshot((snapshot) => {\r\n        const prevPlanner = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        }));\r\n        setPlanner(prevPlanner);\r\n      });\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const unsub = firebase\r\n      .firestore()\r\n      .collection(\"note\")\r\n      .onSnapshot((snapshot) => {\r\n        const activeNote = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        }));\r\n        setNote(activeNote);\r\n      });\r\n\r\n    return () => unsub();\r\n  }, []);\r\n\r\n  function refreshData(e) {\r\n    const unsub = firebase\r\n      .firestore()\r\n      .collection(\"planner\")\r\n      .get()\r\n      .then((query) => {\r\n        query.forEach((doc) => {\r\n          doc.ref.update({\r\n            log: 0,\r\n            progress: \" \",\r\n            title: doc.data().title,\r\n          });\r\n        });\r\n      });\r\n    firebase\r\n      .firestore()\r\n      .collection(\"note\")\r\n      .get()\r\n      .then((query) => {\r\n        query.forEach((doc) => {\r\n          doc.ref.update({\r\n            extra: \"Extra notes...\",\r\n          });\r\n        });\r\n      });\r\n    return () => unsub();\r\n  }\r\n\r\n  return (\r\n    <div className=\"planner\">\r\n      <div className=\"planner-container\">\r\n        <div className=\"planner-body\">\r\n          <div className=\"planner-header\">\r\n            <h1 className=\"planner-header-h1\">Productivity Planner</h1>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"planner-refresh-btn\"\r\n              onClick={(e) => {\r\n                refreshData(e);\r\n              }}>\r\n              RESET\r\n            </button>\r\n          </div>\r\n          <div className=\"planner-quote\">\r\n            <PlannerQuote />\r\n          </div>\r\n          <div className=\"planner-split\">\r\n            {/* -- Planner section */}\r\n            <div className=\"planner-content\">\r\n              {planner.map((plan) => (\r\n                <div className=\"planner-items\" key={plan.id}>\r\n                  <div className=\"planner-item\">\r\n                    <textarea\r\n                      className=\"planner-textarea\"\r\n                      type=\"text\"\r\n                      value={plan.progress}\r\n                      onChange={(e) => onChangePlanner(plan.id, e.target.value)}\r\n                      onBlur={(e) => onChangeProgress(plan.id, e.target.value)}\r\n                      required></textarea>\r\n                    <label className=\"planner-label\">{plan.title}</label>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"planner-progress-item\">\r\n              {planner.map((plan) => (\r\n                <div className=\"planner-item-buttons\" key={plan.id}>\r\n                  <Progress progress={plan.log} currIndex={plan.id} />\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"planner-pomodoro\">\r\n              <Pomodoro />\r\n            </div>\r\n          </div>\r\n          {note.map((item) => (\r\n            <div className=\"planner-note\" key={item.id}>\r\n              <textarea\r\n                key={item.id}\r\n                className=\"planner-note-textarea\"\r\n                defaultValue={item.extra}\r\n                onBlur={(e) =>\r\n                  onNoteChange(item.id, e.target.value)\r\n                }></textarea>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlannerBody;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../App.css\";\r\nimport \"./PnL.css\";\r\nimport * as cal from \"../data/pnlCalculator\";\r\n\r\nfunction PnL() {\r\n  const [userRequest, setUserRequest] = useState({\r\n    entry: \"\",\r\n    stopLoss: \"\",\r\n    takeProfit: \"\",\r\n    marketPrice: \"\",\r\n    percentGain: \"\",\r\n    percentLoss: \"\",\r\n    amountUSD: \"\",\r\n    amount: \"\",\r\n  });\r\n\r\n  const [userPnl, setUserPnl] = useState({\r\n    userGain: \"\",\r\n    userLoss: \"\",\r\n    userLiquidation: \"\",\r\n  });\r\n\r\n  const [orderType, setOrderType] = useState({\r\n    buy: true,\r\n    sell: false,\r\n  });\r\n\r\n  const handleNumberChange = (type, e) => {\r\n    var value = e.target.value;\r\n\r\n    setUserRequest({ ...userRequest, [type]: value ? parseFloat(value) : \"\" });\r\n  };\r\n\r\n  /////////////////////////////////////\r\n  // - ORDER CHANGE\r\n  // * Change the CSS styling when user click on buy/sell button\r\n  /////////////////////////////////////\r\n  const orderClick = (type, e) => {\r\n    if (type === \"sell\") {\r\n      setOrderType({ buy: false, sell: true });\r\n    } else {\r\n      setOrderType({ buy: true, sell: false });\r\n    }\r\n  };\r\n\r\n  let orderBuyStyle = orderType.buy ? \"pnl-order-buy\" : \"pnl-order-button\";\r\n  let orderSellStyle = orderType.sell ? \"pnl-order-sell\" : \" pnl-order-button\";\r\n  ///////////////////////////////////////\r\n  //  - PERCENT GAIN & LOSS\r\n  //  * setState for profit and stoploss percentage when user input entry,stoploss and tp\r\n  /////////////////////////////////////////\r\n  useEffect(() => {\r\n    var curProfit;\r\n    var curStoploss;\r\n\r\n    if (userRequest.entry !== \"\" && userRequest.takeProfit !== \"\") {\r\n      curProfit = cal.profitCal(userRequest.entry, userRequest.takeProfit);\r\n    }\r\n\r\n    if (userRequest.entry !== \"\" && userRequest.stopLoss !== \"\") {\r\n      curStoploss = cal.stoplossCal(userRequest.entry, userRequest.stopLoss);\r\n    }\r\n\r\n    setUserRequest({\r\n      ...userRequest,\r\n      percentGain: curProfit ? parseFloat(curProfit) : \"\",\r\n      percentLoss: curStoploss ? parseFloat(curStoploss) : \"\",\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [userRequest.entry, userRequest.takeProfit, userRequest.stopLoss]);\r\n\r\n  /////////////////////////////////////\r\n  //  - AMOUNT IN USD\r\n  //  *setState for amount in USD when user put in amount and marketPrice\r\n  /////////////////////////////////////\r\n  useEffect(() => {\r\n    var amount;\r\n    if (userRequest.amount !== \"\" && userRequest.marketPrice !== \"\") {\r\n      amount = cal.amountInUSD(userRequest.amount, userRequest.marketPrice);\r\n    }\r\n    setUserRequest({\r\n      ...userRequest,\r\n      amountUSD: amount ? parseFloat(amount) : \"\",\r\n    });\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [userRequest.amount, userRequest.marketPrice]);\r\n\r\n  /////////////////////////////////////////\r\n  // -GAIN AND LOSS PNL\r\n  // *setState for EXIT pnl and Stop PNL after percentGain and percentLoss calculated\r\n  /////////////////////////////////////////\r\n  useEffect(() => {\r\n    var gainPnl;\r\n    var stopPnl;\r\n    if (userRequest.amountUSD !== \"\" && userRequest.percentGain !== \"\") {\r\n      gainPnl = cal.gainPNL(userRequest.amountUSD, userRequest.percentGain);\r\n    }\r\n\r\n    if (userRequest.amountUSD !== \"\" && userRequest.percentLoss !== \"\") {\r\n      stopPnl = cal.stopPNL(userRequest.amountUSD, userRequest.percentLoss);\r\n    }\r\n    setUserPnl({\r\n      ...userPnl,\r\n      userGain: gainPnl ? parseFloat(gainPnl) : \"\",\r\n      userLoss: stopPnl ? parseFloat(stopPnl) : \"\",\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [userRequest.amountUSD, userRequest.percentGain, userRequest.percentLoss]);\r\n\r\n  ///////////////////////////////////\r\n  // -SLIDER VALUE\r\n\r\n  const amountChange = (e) => {\r\n    setUserRequest({\r\n      ...userRequest,\r\n      amount: parseFloat(e.target.value),\r\n    });\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   amountChange();\r\n  // }, []);\r\n\r\n  window.addEventListener(\"pnl-slider-input\", amountChange);\r\n  //////////////////////////////////\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"pnl-title\"> Profit and Loss Calculator</h1>\r\n      <div className=\"pnl-container\">\r\n        <div className=\"pnl-body\">\r\n          {/* Top of the page: Buy/Sell Button */}\r\n          <div className=\"pnl-order\">\r\n            <button\r\n              className={orderBuyStyle}\r\n              onClick={(e) => orderClick(\"buy\", e)}\r\n              defaultValue=\"Buy\"\r\n            >\r\n              Buy\r\n            </button>\r\n            <button\r\n              className={orderSellStyle}\r\n              onClick={(e) => orderClick(\"sell\", e)}\r\n              defaultValue=\"Sell\"\r\n            >\r\n              Sell\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"pnl-menu\">\r\n            {/* Left side of the page: Entry/ TP / SL */}\r\n            <div className=\"pnl-grid\">\r\n              <div className=\"pnl-items\">\r\n                <label className=\"pnl-items-title \">Entry</label>\r\n                <div className=\"pnl-box\">\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"pnl-input\"\r\n                    value={userRequest.entry}\r\n                    onChange={(e) => handleNumberChange(\"entry\", e)}\r\n                  ></input>\r\n                </div>\r\n              </div>\r\n              <div className=\"pnl-items\">\r\n                <label className=\"pnl-items-title \">Take Profit</label>\r\n                <div className=\"pnl-box\">\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"pnl-input\"\r\n                    value={userRequest.takeProfit}\r\n                    onChange={(e) => handleNumberChange(\"takeProfit\", e)}\r\n                  ></input>\r\n                </div>\r\n                {orderType.buy &\r\n                (userRequest.takeProfit < userRequest.marketPrice) ? (\r\n                  <p className=\"pnl-warning\"> Should be greater than market</p>\r\n                ) : null}\r\n                {orderType.sell &\r\n                (userRequest.takeProfit > userRequest.marketPrice) ? (\r\n                  <p className=\"pnl-warning\">Should be lower than market</p>\r\n                ) : null}\r\n              </div>\r\n              <div className=\"pnl-items\">\r\n                <label className=\"pnl-items-title \">Stoploss</label>\r\n                <div className=\"pnl-box\">\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"pnl-input\"\r\n                    value={userRequest.stopLoss}\r\n                    onChange={(e) => handleNumberChange(\"stopLoss\", e)}\r\n                  ></input>\r\n                </div>\r\n                {orderType.buy &\r\n                (userRequest.stopLoss > userRequest.marketPrice) ? (\r\n                  <p className=\"pnl-warning\"> Should be lower than market</p>\r\n                ) : null}\r\n                {orderType.sell &\r\n                (userRequest.stopLoss < userRequest.marketPrice) ? (\r\n                  <p className=\"pnl-warning\">Should be greater than market</p>\r\n                ) : null}\r\n              </div>\r\n              <div className=\"pnl-items\">\r\n                <label className=\"pnl-items-title \">Amount</label>\r\n                <div className=\"pnl-box\">\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"pnl-input\"\r\n                    value={userRequest.amount}\r\n                    onChange={(e) => handleNumberChange(\"amount\", e)}\r\n                  ></input>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* Right side of the page : Market Price/ % Gain/ % Loss */}\r\n            <div className=\"pnl-grid\">\r\n              <div className=\"pnl-items\">\r\n                <label className=\"pnl-items-title \">Market Price</label>\r\n                <div className=\"pnl-box\">\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"pnl-input\"\r\n                    value={userRequest.currentPrice}\r\n                    onChange={(e) => handleNumberChange(\"marketPrice\", e)}\r\n                  ></input>\r\n                </div>\r\n              </div>\r\n              <div className=\"pnl-items\">\r\n                <label className=\"pnl-items-title \">% Gain</label>\r\n                <div className=\"pnl-box\">\r\n                  <input\r\n                    className=\"pnl-input\"\r\n                    type=\"number\"\r\n                    value={userRequest.percentGain}\r\n                    onChange={(e) => handleNumberChange(\"percentGain\", e)}\r\n                  ></input>\r\n                </div>\r\n              </div>\r\n              <div className=\"pnl-items\">\r\n                <label className=\"pnl-items-title \">% Loss</label>\r\n                <div className=\"pnl-box\">\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"pnl-input\"\r\n                    value={userRequest.percentLoss}\r\n                    onChange={(e) => handleNumberChange(\"percentLoss\", e)}\r\n                  ></input>\r\n                </div>\r\n              </div>\r\n              <div className=\"pnl-items\">\r\n                <label className=\"pnl-items-title \">Amount USD</label>\r\n                <div className=\"pnl-box\">\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"pnl-input\"\r\n                    value={userRequest.amountUSD}\r\n                    onChange={(e) => handleNumberChange(\"amountUSD\", e)}\r\n                  ></input>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"pnl-slider\">\r\n            <input\r\n              type=\"range\"\r\n              min=\"0\"\r\n              max={parseFloat(userRequest.marketPrice) > 300 ? \"100\" : \"10000\"}\r\n              step={parseFloat(userRequest.marketPrice) > 300 ? \"0.01\" : \"1\"}\r\n              defaultValue=\"0\"\r\n              onChange={amountChange}\r\n              className=\"pnl-slider-input\"\r\n            />\r\n          </div>\r\n          {/* Bottom of the page: EXIT/ STOP / LIQUIDATION */}\r\n          <div className=\"pnl-summary\">\r\n            <div className=\"pnl-items\">\r\n              <label className=\"pnl-items-title \">Exit PnL</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"pnl-box\"\r\n                defaultValue={userPnl.userGain}\r\n              ></input>\r\n            </div>\r\n            <div className=\"pnl-items\">\r\n              <label className=\"pnl-items-title \">Stop PnL</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"pnl-box\"\r\n                defaultValue={userPnl.userLoss}\r\n              ></input>\r\n            </div>\r\n            <div className=\"pnl-items\">\r\n              <label className=\"pnl-items-title \">Liquidation Price</label>\r\n              <input type=\"number\" className=\"pnl-box\"></input>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PnL;\r\n","import { round } from \"lodash\";\r\nexport const stoplossCal = (entry, stoploss) => {\r\n  return round((Math.abs(entry - stoploss) / entry) * 100, 2);\r\n};\r\n\r\nexport const profitCal = (entry, tp) => {\r\n  return round((Math.abs(entry - tp) / entry) * 100, 2);\r\n};\r\n\r\nexport const amountInUSD = (amount, marketPrice) => {\r\n  return round(amount * marketPrice, 4);\r\n};\r\n\r\n// export const liquidationPrice = () => {\r\n//   var positionSize = amount * marketPrice;\r\n//   var marginFraction = collateral / positionSize;\r\n//   var maintenanceMargin = maintenanceMargin;\r\n//   var priceLiquidated = ;\r\n//   return priceLiquidated;\r\n// };\r\n\r\nexport const gainPNL = (amountUSD, percentGain) => {\r\n  return round(amountUSD * (percentGain / 100), 3);\r\n};\r\n\r\nexport const stopPNL = (amountUSD, percentLoss) => {\r\n  return round(amountUSD * (percentLoss / 100), 3);\r\n};\r\n\r\n// export default pnlCalculator = () => {\r\n//   stopLossCal = (entry, stoploss) => {\r\n//     return (Math.abs(entry - stoploss) / entry) * 100;\r\n//   };\r\n\r\n//   profitCal = (entry, tp) => {\r\n//     return (Math.abs(entry - tp) / entry) * 100;\r\n//   };\r\n\r\n//   amountInUSD = (amount, marketPrice) => {\r\n//     return amount * marketPrice;\r\n//   };\r\n\r\n//   liquidationPrice = () => {};\r\n// };\r\n","import React from \"react\";\r\nimport PlannerBody from \"../plannerComponents/PlannerBody\";\r\nimport PnL from \"../PnL\";\r\nfunction Home() {\r\n  return (\r\n    <div>\r\n      <>\r\n        <PlannerBody />\r\n      </>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport \"./Button.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst STYLES = [\"btn--primary\", \"btn--outline\", \"btn--test\"];\r\n\r\nconst SIZES = [\"btn--medium\", \"btn--large\"];\r\n\r\nexport const Button = ({\r\n  children,\r\n  type,\r\n  onClick,\r\n  buttonStyle,\r\n  buttonSize,\r\n}) => {\r\n  const checkButtonStyle = STYLES.includes(buttonStyle)\r\n    ? buttonStyle\r\n    : STYLES[0];\r\n\r\n  const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0];\r\n\r\n  return (\r\n    <Link to=\"/sign-up\" className=\"btn-mobile\">\r\n      <button\r\n        className={`btn ${checkButtonStyle} ${checkButtonSize}`}\r\n        onClick={onClick}\r\n        type={type}\r\n      >\r\n        {children}\r\n      </button>\r\n    </Link>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button } from \"./Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Navbar.css\";\r\n\r\nfunction Navbar() {\r\n  const [click, setClick] = useState(false);\r\n  const [button, setButton] = useState(true);\r\n  const handleClick = () => setClick(!click);\r\n  const closeMobileMenu = () => setClick(false);\r\n\r\n  const showButton = () => {\r\n    if (window.innerWidth <= 960) {\r\n      setButton(false);\r\n    } else {\r\n      setButton(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    showButton();\r\n  }, []);\r\n  window.addEventListener(\"resize\", showButton);\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <div className=\"navbar-container\">\r\n        <Link to=\"/\" className=\"navbar-logo\" onClick={closeMobileMenu}>\r\n          sashimi\r\n          <i className=\"fas fa-dragon\"></i>\r\n        </Link>\r\n        <div className=\"menu-icon\" onClick={handleClick}>\r\n          <i className={click ? \"fas fa-times\" : \"fas fa-bars\"} />\r\n        </div>\r\n\r\n        <ul className={click ? \"nav-menu active\" : \"nav-menu\"}>\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/journal\" className=\"nav-links\" onClick={closeMobileMenu}>\r\n              Journal\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/pnl\" className=\"nav-links\" onClick={closeMobileMenu}>\r\n              PnL\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/planner\" className=\"nav-links\" onClick={closeMobileMenu}>\r\n              Planner\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link\r\n              to=\"/sign-up\"\r\n              className=\"nav-links-mobile\"\r\n              onClick={closeMobileMenu}>\r\n              Sign Up\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n        {button && <Button buttonStyle=\"btn--outline\">SIGN UP</Button>}\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport PlannerBody from \"../plannerComponents/PlannerBody\";\r\n\r\nfunction Planner() {\r\n  return <PlannerBody />;\r\n}\r\n\r\nexport default Planner;\r\n","import React from \"react\";\r\nimport firebase from \"firebase\";\r\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\r\n\r\n// Configure FirebaseUI.\r\nconst uiConfig = {\r\n  // Popup signin flow rather than redirect flow.\r\n  signInFlow: \"popup\",\r\n  // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\r\n  signInSuccessUrl: \"/portfolio/#/planner/\",\r\n  // We will display Google and Facebook as auth providers.\r\n  signInOptions: [\r\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n    firebase.auth.EmailAuthProvider.PROVIDER_ID,\r\n  ],\r\n};\r\n\r\nfunction Signup() {\r\n  return (\r\n    <div>\r\n      <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n","import React from \"react\";\r\n\r\nconst Journal = () => {\r\n  return <div>test</div>;\r\n};\r\n\r\nexport default Journal;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Home from \"./components/pages/Home\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport PnL from \"./components/PnL\";\r\nimport Planner from \"./components/pages/Planner\";\r\nimport Signup from \"./components/pages/Signup\";\r\nimport Journal from \"./components/pages/Journal\";\r\nimport { TimeProvider } from \"./components/plannerComponents/pomodoro/TimerProvider\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Navbar />\r\n        <Route path=\"/journal\" exact component={Journal} />\r\n        <Switch>\r\n          <Route path=\"/\" exact component={PnL} />\r\n          <Route path=\"/pnl\" exact component={PnL} />\r\n          <Route\r\n            path=\"/planner\"\r\n            render={(props) => (\r\n              <TimeProvider>\r\n                <Planner {...props} />\r\n              </TimeProvider>\r\n            )}\r\n          />\r\n          <Route path=\"/sign-up\" exact component={Signup} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState: {\r\n    value: 0,\r\n  },\r\n  reducers: {\r\n    increment: state => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1;\r\n    },\r\n    decrement: state => {\r\n      state.value -= 1;\r\n    },\r\n    incrementByAmount: (state, action) => {\r\n      state.value += action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched\r\nexport const incrementAsync = amount => dispatch => {\r\n  setTimeout(() => {\r\n    dispatch(incrementByAmount(amount));\r\n  }, 1000);\r\n};\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectCount = state => state.counter.value;\r\n\r\nexport default counterSlice.reducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport counterReducer from '../features/counter/counterSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    counter: counterReducer,\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport store from \"./app/store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}