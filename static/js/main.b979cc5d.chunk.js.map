{"version":3,"sources":["components/PnL.js","data/pnlCalculator.js","components/pages/Home.js","components/Button.js","components/Navbar.js","components/plannerComponents/plannerQuote.js","components/plannerComponents/pomodoro/TimerProvider.js","components/plannerComponents/pomodoro/Title.js","components/plannerComponents/pomodoro/Timer.js","components/plannerComponents/pomodoro/Button.js","components/plannerComponents/pomodoro/TimeController.js","components/plannerComponents/pomodoro/ButtonController.js","services/firebase.js","components/plannerComponents/PlannerPomo.js","components/plannerComponents/pomodoro/Progress.js","components/plannerComponents/PlannerBody.js","components/pages/Planner.js","App.js","features/counter/counterSlice.js","app/store.js","index.js"],"names":["PnL","useState","entry","stopLoss","takeProfit","marketPrice","percentGain","percentLoss","amountUSD","amount","userRequest","setUserRequest","userGain","userLoss","userLiquidation","userPnl","setUserPnl","buy","sell","orderType","setOrderType","handleNumberChange","type","e","value","target","parseFloat","orderClick","orderBuyStyle","orderSellStyle","useEffect","curProfit","curStoploss","tp","round","Math","abs","stoploss","cal","gainPnl","stopPnl","amountChange","window","addEventListener","className","onClick","defaultValue","onChange","currentPrice","min","max","step","Home","STYLES","SIZES","Button","children","buttonStyle","buttonSize","checkButtonStyle","includes","checkButtonSize","to","Navbar","click","setClick","button","setButton","closeMobileMenu","showButton","innerWidth","PlannerQuote","quotes","TimeContext","createContext","TimeProvider","props","currIndex","currentProgress","setCurrentProgress","session","break","mode","time","currentTime","startingTime","active","name","progress","timer","setTimer","Provider","Title","title","Timer","id","minutes","floor","seconds","formatTime","buttonId","actionClick","TimeController","useContext","changeTimer","operator","console","log","labelId","label","lengthId","ButtonController","React","myRef","current","pause","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Pomodoro","beep","useRef","interval","setInterval","clearInterval","play","firestore","collection","doc","get","then","query","currLog","data","ref","update","playPause","playing","durationId","preload","src","Progress","Array","fill","map","item","index","key","preventDefault","setActive","PlannerBody","planner","setPlanner","note","setNote","setQuote","a","forEach","extra","location","reload","unsubscribe","onSnapshot","snapshot","prevPlanner","docs","author","unsub","activeNote","refreshData","plan","onBlur","currentId","newProgress","toString","onChangeProgress","required","newNote","onNoteChange","Planner","App","path","exact","component","render","counterSlice","createSlice","initialState","reducers","increment","state","decrement","incrementByAmount","action","payload","actions","configureStore","reducer","counter","counterReducer","ReactDOM","store","document","getElementById"],"mappings":"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","file":"static/js/main.b979cc5d.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"../App.css\";\r\nimport \"./PnL.css\";\r\nimport * as cal from \"../data/pnlCalculator\";\r\n\r\nfunction PnL() {\r\n  const [userRequest, setUserRequest] = useState({\r\n    entry: \"\",\r\n    stopLoss: \"\",\r\n    takeProfit: \"\",\r\n    marketPrice: \"\",\r\n    percentGain: \"\",\r\n    percentLoss: \"\",\r\n    amountUSD: \"\",\r\n    amount: \"\",\r\n  });\r\n\r\n  const [userPnl, setUserPnl] = useState({\r\n    userGain: \"\",\r\n    userLoss: \"\",\r\n    userLiquidation: \"\",\r\n  });\r\n\r\n  const [orderType, setOrderType] = useState({\r\n    buy: true,\r\n    sell: false,\r\n  });\r\n\r\n  const handleNumberChange = (type, e) => {\r\n    var value = e.target.value;\r\n\r\n    setUserRequest({ ...userRequest, [type]: value ? parseFloat(value) : \"\" });\r\n  };\r\n\r\n  /////////////////////////////////////\r\n  // - ORDER CHANGE\r\n  // * Change the CSS styling when user click on buy/sell button\r\n  /////////////////////////////////////\r\n  const orderClick = (type, e) => {\r\n    if (type === \"sell\") {\r\n      setOrderType({ buy: false, sell: true });\r\n    } else {\r\n      setOrderType({ buy: true, sell: false });\r\n    }\r\n  };\r\n\r\n  let orderBuyStyle = orderType.buy ? \"pnl-order-buy\" : \"pnl-order-button\";\r\n  let orderSellStyle = orderType.sell ? \"pnl-order-sell\" : \" pnl-order-button\";\r\n  ///////////////////////////////////////\r\n  //  - PERCENT GAIN & LOSS\r\n  //  * setState for profit and stoploss percentage when user input entry,stoploss and tp\r\n  /////////////////////////////////////////\r\n  useEffect(() => {\r\n    var curProfit;\r\n    var curStoploss;\r\n\r\n    if (userRequest.entry !== \"\" && userRequest.takeProfit !== \"\") {\r\n      curProfit = cal.profitCal(userRequest.entry, userRequest.takeProfit);\r\n    }\r\n\r\n    if (userRequest.entry !== \"\" && userRequest.stopLoss !== \"\") {\r\n      curStoploss = cal.stoplossCal(userRequest.entry, userRequest.stopLoss);\r\n    }\r\n\r\n    setUserRequest({\r\n      ...userRequest,\r\n      percentGain: curProfit ? parseFloat(curProfit) : \"\",\r\n      percentLoss: curStoploss ? parseFloat(curStoploss) : \"\",\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [userRequest.entry, userRequest.takeProfit, userRequest.stopLoss]);\r\n\r\n  /////////////////////////////////////\r\n  //  - AMOUNT IN USD\r\n  //  *setState for amount in USD when user put in amount and marketPrice\r\n  /////////////////////////////////////\r\n  useEffect(() => {\r\n    var amount;\r\n    if (userRequest.amount !== \"\" && userRequest.marketPrice !== \"\") {\r\n      amount = cal.amountInUSD(userRequest.amount, userRequest.marketPrice);\r\n    }\r\n    setUserRequest({\r\n      ...userRequest,\r\n      amountUSD: amount ? parseFloat(amount) : \"\",\r\n    });\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [userRequest.amount, userRequest.marketPrice]);\r\n\r\n  /////////////////////////////////////////\r\n  // -GAIN AND LOSS PNL\r\n  // *setState for EXIT pnl and Stop PNL after percentGain and percentLoss calculated\r\n  /////////////////////////////////////////\r\n  useEffect(() => {\r\n    var gainPnl;\r\n    var stopPnl;\r\n    if (userRequest.amountUSD !== \"\" && userRequest.percentGain !== \"\") {\r\n      gainPnl = cal.gainPNL(userRequest.amountUSD, userRequest.percentGain);\r\n    }\r\n\r\n    if (userRequest.amountUSD !== \"\" && userRequest.percentLoss !== \"\") {\r\n      stopPnl = cal.stopPNL(userRequest.amountUSD, userRequest.percentLoss);\r\n    }\r\n    setUserPnl({\r\n      ...userPnl,\r\n      userGain: gainPnl ? parseFloat(gainPnl) : \"\",\r\n      userLoss: stopPnl ? parseFloat(stopPnl) : \"\",\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [userRequest.amountUSD, userRequest.percentGain, userRequest.percentLoss]);\r\n\r\n  ///////////////////////////////////\r\n  // -SLIDER VALUE\r\n\r\n  const amountChange = (e) => {\r\n    setUserRequest({\r\n      ...userRequest,\r\n      amount: parseFloat(e.target.value),\r\n    });\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   amountChange();\r\n  // }, []);\r\n\r\n  window.addEventListener(\"pnl-slider-input\", amountChange);\r\n  //////////////////////////////////\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"pnl-title\"> Profit and Loss Calculator</h1>\r\n      <div className=\"pnl-container\">\r\n        <div className=\"pnl-body\">\r\n          {/* Top of the page: Buy/Sell Button */}\r\n          <div className=\"pnl-order\">\r\n            <button\r\n              className={orderBuyStyle}\r\n              onClick={(e) => orderClick(\"buy\", e)}\r\n              defaultValue=\"Buy\"\r\n            >\r\n              Buy\r\n            </button>\r\n            <button\r\n              className={orderSellStyle}\r\n              onClick={(e) => orderClick(\"sell\", e)}\r\n              defaultValue=\"Sell\"\r\n            >\r\n              Sell\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"pnl-menu\">\r\n            {/* Left side of the page: Entry/ TP / SL */}\r\n            <div className=\"pnl-grid\">\r\n              <div className=\"pnl-items\">\r\n                <label className=\"pnl-items-title \">Entry</label>\r\n                <div className=\"pnl-box\">\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"pnl-input\"\r\n                    value={userRequest.entry}\r\n                    onChange={(e) => handleNumberChange(\"entry\", e)}\r\n                  ></input>\r\n                </div>\r\n              </div>\r\n              <div className=\"pnl-items\">\r\n                <label className=\"pnl-items-title \">Take Profit</label>\r\n                <div className=\"pnl-box\">\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"pnl-input\"\r\n                    value={userRequest.takeProfit}\r\n                    onChange={(e) => handleNumberChange(\"takeProfit\", e)}\r\n                  ></input>\r\n                </div>\r\n                {orderType.buy &\r\n                (userRequest.takeProfit < userRequest.marketPrice) ? (\r\n                  <p className=\"pnl-warning\"> Should be greater than market</p>\r\n                ) : null}\r\n                {orderType.sell &\r\n                (userRequest.takeProfit > userRequest.marketPrice) ? (\r\n                  <p className=\"pnl-warning\">Should be lower than market</p>\r\n                ) : null}\r\n              </div>\r\n              <div className=\"pnl-items\">\r\n                <label className=\"pnl-items-title \">Stoploss</label>\r\n                <div className=\"pnl-box\">\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"pnl-input\"\r\n                    value={userRequest.stopLoss}\r\n                    onChange={(e) => handleNumberChange(\"stopLoss\", e)}\r\n                  ></input>\r\n                </div>\r\n                {orderType.buy &\r\n                (userRequest.stopLoss > userRequest.marketPrice) ? (\r\n                  <p className=\"pnl-warning\"> Should be lower than market</p>\r\n                ) : null}\r\n                {orderType.sell &\r\n                (userRequest.stopLoss < userRequest.marketPrice) ? (\r\n                  <p className=\"pnl-warning\">Should be greater than market</p>\r\n                ) : null}\r\n              </div>\r\n              <div className=\"pnl-items\">\r\n                <label className=\"pnl-items-title \">Amount</label>\r\n                <div className=\"pnl-box\">\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"pnl-input\"\r\n                    value={userRequest.amount}\r\n                    onChange={(e) => handleNumberChange(\"amount\", e)}\r\n                  ></input>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* Right side of the page : Market Price/ % Gain/ % Loss */}\r\n            <div className=\"pnl-grid\">\r\n              <div className=\"pnl-items\">\r\n                <label className=\"pnl-items-title \">Market Price</label>\r\n                <div className=\"pnl-box\">\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"pnl-input\"\r\n                    value={userRequest.currentPrice}\r\n                    onChange={(e) => handleNumberChange(\"marketPrice\", e)}\r\n                  ></input>\r\n                </div>\r\n              </div>\r\n              <div className=\"pnl-items\">\r\n                <label className=\"pnl-items-title \">% Gain</label>\r\n                <div className=\"pnl-box\">\r\n                  <input\r\n                    className=\"pnl-input\"\r\n                    type=\"number\"\r\n                    value={userRequest.percentGain}\r\n                    onChange={(e) => handleNumberChange(\"percentGain\", e)}\r\n                  ></input>\r\n                </div>\r\n              </div>\r\n              <div className=\"pnl-items\">\r\n                <label className=\"pnl-items-title \">% Loss</label>\r\n                <div className=\"pnl-box\">\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"pnl-input\"\r\n                    value={userRequest.percentLoss}\r\n                    onChange={(e) => handleNumberChange(\"percentLoss\", e)}\r\n                  ></input>\r\n                </div>\r\n              </div>\r\n              <div className=\"pnl-items\">\r\n                <label className=\"pnl-items-title \">Amount USD</label>\r\n                <div className=\"pnl-box\">\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"pnl-input\"\r\n                    value={userRequest.amountUSD}\r\n                    onChange={(e) => handleNumberChange(\"amountUSD\", e)}\r\n                  ></input>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"pnl-slider\">\r\n            <input\r\n              type=\"range\"\r\n              min=\"0\"\r\n              max={parseFloat(userRequest.marketPrice) > 300 ? \"100\" : \"10000\"}\r\n              step={parseFloat(userRequest.marketPrice) > 300 ? \"0.01\" : \"1\"}\r\n              defaultValue=\"0\"\r\n              onChange={amountChange}\r\n              className=\"pnl-slider-input\"\r\n            />\r\n          </div>\r\n          {/* Bottom of the page: EXIT/ STOP / LIQUIDATION */}\r\n          <div className=\"pnl-summary\">\r\n            <div className=\"pnl-items\">\r\n              <label className=\"pnl-items-title \">Exit PnL</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"pnl-box\"\r\n                defaultValue={userPnl.userGain}\r\n              ></input>\r\n            </div>\r\n            <div className=\"pnl-items\">\r\n              <label className=\"pnl-items-title \">Stop PnL</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"pnl-box\"\r\n                defaultValue={userPnl.userLoss}\r\n              ></input>\r\n            </div>\r\n            <div className=\"pnl-items\">\r\n              <label className=\"pnl-items-title \">Liquidation Price</label>\r\n              <input type=\"number\" className=\"pnl-box\"></input>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PnL;\r\n","import { round } from \"lodash\";\r\nexport const stoplossCal = (entry, stoploss) => {\r\n  return round((Math.abs(entry - stoploss) / entry) * 100, 2);\r\n};\r\n\r\nexport const profitCal = (entry, tp) => {\r\n  return round((Math.abs(entry - tp) / entry) * 100, 2);\r\n};\r\n\r\nexport const amountInUSD = (amount, marketPrice) => {\r\n  return round(amount * marketPrice, 4);\r\n};\r\n\r\n// export const liquidationPrice = () => {\r\n//   var positionSize = amount * marketPrice;\r\n//   var marginFraction = collateral / positionSize;\r\n//   var maintenanceMargin = maintenanceMargin;\r\n//   var priceLiquidated = ;\r\n//   return priceLiquidated;\r\n// };\r\n\r\nexport const gainPNL = (amountUSD, percentGain) => {\r\n  return round(amountUSD * (percentGain / 100), 3);\r\n};\r\n\r\nexport const stopPNL = (amountUSD, percentLoss) => {\r\n  return round(amountUSD * (percentLoss / 100), 3);\r\n};\r\n\r\n// export default pnlCalculator = () => {\r\n//   stopLossCal = (entry, stoploss) => {\r\n//     return (Math.abs(entry - stoploss) / entry) * 100;\r\n//   };\r\n\r\n//   profitCal = (entry, tp) => {\r\n//     return (Math.abs(entry - tp) / entry) * 100;\r\n//   };\r\n\r\n//   amountInUSD = (amount, marketPrice) => {\r\n//     return amount * marketPrice;\r\n//   };\r\n\r\n//   liquidationPrice = () => {};\r\n// };\r\n","import React from \"react\";\r\nimport PnL from \"../PnL\";\r\nfunction Home() {\r\n  return (\r\n    <div>\r\n      <>\r\n        <PnL />\r\n      </>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport \"./Button.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst STYLES = [\"btn--primary\", \"btn--outline\", \"btn--test\"];\r\n\r\nconst SIZES = [\"btn--medium\", \"btn--large\"];\r\n\r\nexport const Button = ({\r\n  children,\r\n  type,\r\n  onClick,\r\n  buttonStyle,\r\n  buttonSize,\r\n}) => {\r\n  const checkButtonStyle = STYLES.includes(buttonStyle)\r\n    ? buttonStyle\r\n    : STYLES[0];\r\n\r\n  const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0];\r\n\r\n  return (\r\n    <Link to=\"/sign-up\" className=\"btn-mobile\">\r\n      <button\r\n        className={`btn ${checkButtonStyle} ${checkButtonSize}`}\r\n        onClick={onClick}\r\n        type={type}\r\n      >\r\n        {children}\r\n      </button>\r\n    </Link>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button } from \"./Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Navbar.css\";\r\n\r\nfunction Navbar() {\r\n  const [click, setClick] = useState(false);\r\n  const [button, setButton] = useState(true);\r\n  const handleClick = () => setClick(!click);\r\n  const closeMobileMenu = () => setClick(false);\r\n\r\n  const showButton = () => {\r\n    if (window.innerWidth <= 960) {\r\n      setButton(false);\r\n    } else {\r\n      setButton(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    showButton();\r\n  }, []);\r\n  window.addEventListener(\"resize\", showButton);\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <div className=\"navbar-container\">\r\n        <Link to=\"/\" className=\"navbar-logo\" onClick={closeMobileMenu}>\r\n          sashimi\r\n          <i className=\"fas fa-dragon\"></i>\r\n        </Link>\r\n        <div className=\"menu-icon\" onClick={handleClick}>\r\n          <i className={click ? \"fas fa-times\" : \"fas fa-bars\"} />\r\n        </div>\r\n\r\n        <ul className={click ? \"nav-menu active\" : \"nav-menu\"}>\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/\" className=\"nav-links\" onClick={closeMobileMenu}>\r\n              Home\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/pnl\" className=\"nav-links\" onClick={closeMobileMenu}>\r\n              PnL\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/planner\" className=\"nav-links\" onClick={closeMobileMenu}>\r\n              Planner\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link\r\n              to=\"/sign-up\"\r\n              className=\"nav-links-mobile\"\r\n              onClick={closeMobileMenu}>\r\n              Sign Up\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n        {button && <Button buttonStyle=\"btn--outline\">SIGN UP</Button>}\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport \"./plannerBody.css\";\r\n\r\nexport const PlannerQuote = ({ quotes }) => {\r\n  return (\r\n    <div className=\"planner-quote-body\">\r\n      <h2 className=\"planner-quote-h2\">\r\n        \"Take OPTIMISTIC bets. Don't be PESSIMISTIC. Control your MIND\"\r\n      </h2>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect, createContext } from \"react\";\r\nimport \"../plannerPomo.css\";\r\n\r\n// Sending props to other components\r\nexport const TimeContext = createContext();\r\n\r\nexport const TimeProvider = (props) => {\r\n  const [currentProgress, setCurrentProgress] = useState({\r\n    currIndex: 1,\r\n  });\r\n  // const [timer, setTimer] = useState({\r\n  //   session: 1500,\r\n  //   break: 300,\r\n  //   mode: \"session\",\r\n  //   time: { currentTime: 1500, startingTime: 1500 },\r\n  //   active: false,\r\n  //   name: \"Pomodoro Timer\",\r\n  //   progress: 0,\r\n  // });\r\n\r\n  const [timer, setTimer] = useState({\r\n    session: 120,\r\n    break: 120,\r\n    mode: \"session\",\r\n    time: { currentTime: 120, startingTime: 120 },\r\n    active: false,\r\n    name: \"Pomodoro Timer\",\r\n    progress: 0,\r\n  });\r\n\r\n  return (\r\n    <TimeContext.Provider\r\n      value={[timer, setTimer, currentProgress, setCurrentProgress]}>\r\n      {props.children}\r\n    </TimeContext.Provider>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./Title.css\";\r\nexport const Title = (props) => {\r\n  return (\r\n    <div>\r\n      <header>\r\n        <h1 className=\"title\">{props.title}</h1>\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport \"./Timer.css\"\r\nexport const Timer = (props) => {\r\n\r\n    // converts seconds to min:sec string format\r\n    function formatTime(time){ \r\n        let minutes = Math.floor(time / 60);\r\n        if(minutes < 10){\r\n            minutes = \"0\"+minutes\r\n        }\r\n        let seconds = Math.floor(time - minutes * 60);\r\n        if(seconds < 10){\r\n            seconds = \"0\"+seconds\r\n        }\r\n        return `${minutes}:${seconds}`;\r\n    }\r\n\r\n    return(\r\n    <div className=\"wrapper\">\r\n      <div className=\"counter\">\r\n        \r\n        <div id=\"time-left\">{formatTime(props.time.currentTime)}</div>\r\n        <span className=\"counterType\" id=\"timer-label\">{props.mode}</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\nimport \"./Button.css\"\r\nexport function Button(props) {\r\n    return(\r\n        <button id={props.buttonId} className=\"Button\" onClick={() => props.actionClick(props.type)}>\r\n            {props.children}\r\n        </button>\r\n    )\r\n}\r\n","import React, {useContext} from 'react'\r\nimport {TimeContext} from \"./TimerProvider\"\r\nimport \"./TimeController.css\"\r\nimport {Button} from \"./Button\"\r\n\r\nexport function TimeController(props) {\r\n    const [timer,setTimer] = useContext(TimeContext);\r\n    // update session time / break time onClick\r\n    const changeTimer = operator => {\r\n        let mode = timer.mode;\r\n        console.log(mode);\r\n        if (timer.mode === props.type) {\r\n            console.log('same mode');\r\n            if (operator === 'decrement' && timer[props.type] > 60) {\r\n                //if the current mode && the type are equal change the currentTime & startingTime\r\n                setTimer({\r\n                    ...timer,\r\n                    [props.type]: timer[props.type] - 60, // change session / break time\r\n                    time: {\r\n                        currentTime: timer[timer.mode] - 60,\r\n                        startingTime: timer[timer.mode] - 60\r\n                    }\r\n                });\r\n            }\r\n            if (operator === 'increment' && timer[props.type] < 3600) {\r\n                setTimer({\r\n                    ...timer,\r\n                    [props.type]: timer[props.type] + 60,\r\n                    time: {\r\n                        currentTime: timer[timer.mode] + 60,\r\n                        startingTime: timer[timer.mode] + 60\r\n                    }\r\n                });\r\n            }\r\n        } else {\r\n            let time = timer.time;\r\n            if (operator === 'decrement' && timer[props.type] > 60) {\r\n                //if the current mode && the type are equal change the currentTime & startingTime\r\n                setTimer({\r\n                    ...timer,\r\n                    [props.type]: timer[props.type] - 60, // change session / break time\r\n                    time: time\r\n                });\r\n            }\r\n            if (operator === 'increment' && timer[props.type] < 3600) {\r\n                setTimer({\r\n                    ...timer,\r\n                    [props.type]: timer[props.type] + 60,\r\n                    time: time\r\n                });\r\n            }\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"TimeController\">\r\n            <div className=\"TimeController-button\">\r\n                <Button\r\n                actionClick={() => changeTimer('decrement')}\r\n                className=\"controlButton\"\r\n                buttonId={`${props.type}-decrement`}\r\n            >\r\n                -\r\n            </Button>\r\n            <Button\r\n                actionClick={() => changeTimer('increment')}\r\n                className=\"controlButton\"\r\n                buttonId={`${props.type}-increment`}\r\n            >\r\n                +\r\n            </Button>\r\n            \r\n            </div>\r\n            \r\n            <div className=\"wrapperDisplay\">\r\n                <span id={props.labelId} className=\"label\">\r\n                    {props.label}\r\n                </span>\r\n                <span id={props.lengthId} className=\"time\">\r\n                    {timer[props.type] / 60}\r\n                </span>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n  }\r\n","import React from \"react\";\r\nimport \"./ButtonController.css\";\r\nimport { TimeContext } from \"./TimerProvider\";\r\nimport { Button } from \"./Button\";\r\n\r\nexport function ButtonController(props) {\r\n  const [timer, setTimer] = React.useContext(TimeContext);\r\n\r\n  const resetTime = (sessionValue) => {\r\n    console.log(timer);\r\n    setTimer({\r\n      ...timer,\r\n      session: 1500,\r\n      break: 300,\r\n      mode: \"session\",\r\n      time: { currentTime: 1500, startingTime: 1500 },\r\n      active: false,\r\n      name: \"Pomodoro Timer\",\r\n      progress: 0,\r\n    });\r\n    props.myRef.current.pause();\r\n    props.myRef.current.currentTime = 0;\r\n  };\r\n\r\n  const setActive = () => {\r\n    setTimer({\r\n      ...timer,\r\n      active: !timer.active,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"ButtonController\">\r\n      <Button buttonId=\"reset\" type=\"reset\" actionClick={() => resetTime()}>\r\n        <i className=\"fas fa-undo-alt\"></i>\r\n      </Button>\r\n      <Button buttonId=\"start_stop\" type=\"play\" actionClick={() => setActive()}>\r\n        <i className={`fas ${timer.active ? \"fa-pause\" : \"fa-play\"}`}></i>\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCCQmaxvFQGI_YiBCaJFpxZnKmdG-bOG9o\",\r\n  authDomain: \"coin-casanova.firebaseapp.com\",\r\n  databaseURL: \"https://coin-casanova.firebaseio.com\",\r\n  projectId: \"coin-casanova\",\r\n  storageBucket: \"coin-casanova.appspot.com\",\r\n  messagingSenderId: \"286112267368\",\r\n  appId: \"1:286112267368:web:728eec7e7f68e7ba290fdd\",\r\n  measurementId: \"G-K5G1D4QD67\",\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;\r\n","import React, { useContext } from \"react\";\r\nimport \"../plannerComponents/plannerPomo.css\";\r\nimport { TimeContext } from \"./pomodoro/TimerProvider\";\r\nimport { Title } from \"./pomodoro/Title\";\r\nimport { Timer } from \"./pomodoro/Timer\";\r\nimport { TimeController } from \"./pomodoro/TimeController\";\r\nimport { ButtonController } from \"./pomodoro/ButtonController\";\r\nimport firebase from \"../../services/firebase\";\r\n\r\nconst Pomodoro = () => {\r\n  const [timer, setTimer, currentProgress] = useContext(TimeContext);\r\n\r\n  const { mode, time, name, active, progress } = timer;\r\n  const { currIndex } = currentProgress;\r\n  // create ref for the audio\r\n  const beep = React.useRef();\r\n\r\n  React.useEffect(() => {\r\n    if (timer.active && timer.time.currentTime > 0) {\r\n      const interval = setInterval(() => {\r\n        setTimer({\r\n          ...timer,\r\n          time: {\r\n            startingTime: timer.time.startingTime,\r\n            currentTime: timer.time.currentTime - 1,\r\n          },\r\n        });\r\n      }, 10);\r\n      return () => clearInterval(interval);\r\n    } else if (timer.time.currentTime === 0) {\r\n      beep.current.play();\r\n      beep.current.currentTime = 0;\r\n      //    setTimeout(() => {\r\n      if (timer.mode === \"session\") {\r\n        setTimer({\r\n          ...timer,\r\n          time: {\r\n            currentTime: timer.break,\r\n            startingTime: timer.break,\r\n          },\r\n          mode: \"break\",\r\n        });\r\n      }\r\n      if (timer.mode === \"break\") {\r\n        setTimer({\r\n          ...timer,\r\n          time: {\r\n            currentTime: timer.session,\r\n            startingTime: timer.session,\r\n          },\r\n          mode: \"session\",\r\n          progress: timer.progress + 1,\r\n          active: !timer.active,\r\n        });\r\n\r\n        firebase\r\n          .firestore()\r\n          .collection(\"planner\")\r\n          .doc(currIndex)\r\n          .get()\r\n          .then((query) => {\r\n            const currLog = query.data().log;\r\n            query.ref.update({ log: currLog >= 4 ? 0 : currLog + 1 });\r\n            console.log(\"task progress updated\");\r\n          });\r\n      }\r\n      //    }, 2500);\r\n    }\r\n  }, [setTimer, timer]);\r\n\r\n  React.useEffect(() => {\r\n    if (timer.playPause) {\r\n      beep.current.pause();\r\n      beep.current.currentTime = 0;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"pomo-container\">\r\n      <div className=\"pomo\">\r\n        <Title title={name} />\r\n\r\n        <div>\r\n          <Timer mode={mode} time={time} />\r\n        </div>\r\n        <ButtonController playing={timer.active} myRef={beep} />\r\n\r\n        <div className=\"time-controller-split\">\r\n          <TimeController\r\n            durationId={timer.session}\r\n            type=\"session\"\r\n            label={\"Session\"}\r\n            lengthId={\"session-length\"}\r\n            labelId={\"session-label\"}\r\n          />\r\n          <TimeController\r\n            durationId={timer.break}\r\n            type=\"break\"\r\n            label={\"Break\"}\r\n            lengthId={\"break-length\"}\r\n            labelId={\"break-label\"}\r\n          />\r\n        </div>\r\n\r\n        <audio\r\n          id=\"beep\"\r\n          preload=\"auto\"\r\n          src=\"https://www.soundjay.com/human/sounds/applause-4.mp3\"\r\n          ref={beep}></audio>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pomodoro;\r\n","import React, { useContext } from \"react\";\r\nimport \"./Progress.css\";\r\nimport { TimeContext, TimeProvider } from \"./TimerProvider\";\r\nimport firebase from \"../../../services/firebase\";\r\n\r\nexport const Progress = (props) => {\r\n  const [timer, setTimer, currentProgress, setCurrentProgress] = useContext(\r\n    TimeContext\r\n  );\r\n\r\n  // const { currIndex, currProgress1, currProgress2 } = currentProgress;\r\n\r\n  const setActive = (e, index) => {\r\n    e.preventDefault();\r\n    setTimer({\r\n      ...timer,\r\n      active: !timer.active,\r\n    });\r\n    setCurrentProgress({\r\n      ...currentProgress,\r\n      currIndex: index,\r\n    });\r\n  };\r\n\r\n  // filling the array of size 5 with \"true\" from index 0 to progress\r\n  let progress = new Array(4)\r\n    .fill(0)\r\n    .fill(true, 0, props.progress == null ? 0 : props.progress);\r\n  return (\r\n    <div className=\"progress-container\">\r\n      {progress.map((item, index) => (\r\n        <button\r\n          key={index}\r\n          className={`dot ${progress[index] ? \"completed\" : \"\"}`}\r\n          onClick={(e) => setActive(e, props.currIndex)}></button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport \"../plannerComponents/plannerBody.css\";\r\nimport { PlannerQuote } from \"./plannerQuote\";\r\nimport Pomodoro from \"./PlannerPomo\";\r\nimport { TimeContext, TimeProvider } from \"./pomodoro/TimerProvider\";\r\nimport { Progress } from \"./pomodoro/Progress\";\r\nimport firebase from \"../../services/firebase\";\r\n\r\nconst PlannerBody = () => {\r\n  const [timer, setTimer, currentProgress] = useContext(TimeContext);\r\n  const [planner, setPlanner] = useState([]);\r\n  const [note, setNote] = useState([]);\r\n  const [quotes, setQuote] = useState([]);\r\n\r\n  const onChangeProgress = (currentId, newProgress) => {\r\n    const activeProgress = planner.map((item) => ({\r\n      id: item.id,\r\n      log: item.log,\r\n      progress: item.id === currentId ? newProgress : item.progress,\r\n      title: item.title,\r\n    }));\r\n\r\n    firebase\r\n      .firestore()\r\n      .collection(\"planner\")\r\n      .doc(currentId.toString())\r\n      .get()\r\n      .then((query) => {\r\n        query.ref.update({ progress: newProgress });\r\n      });\r\n  };\r\n\r\n  const onNoteChange = (currentId, newNote) => {\r\n    const activeNote = note.map((item) => ({\r\n      id: item.id,\r\n      extra: item.id === currentId ? newNote : item.extra,\r\n    }));\r\n\r\n    firebase\r\n      .firestore()\r\n      .collection(\"note\")\r\n      .doc(currentId)\r\n      .get()\r\n      .then((query) => {\r\n        query.ref.update({ extra: newNote });\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = firebase\r\n      .firestore()\r\n      .collection(\"planner\")\r\n      .onSnapshot((snapshot) => {\r\n        const prevPlanner = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        }));\r\n        setPlanner(prevPlanner);\r\n      });\r\n\r\n    return () => unsubscribe();\r\n  }, []);\r\n  useEffect(() => {\r\n    const unsubscribe = firebase\r\n      .firestore()\r\n      .collection(\"quote\")\r\n      .onSnapshot((snapshot) => {\r\n        const quotes = snapshot.docs.map((doc) => ({\r\n          author: doc.id,\r\n          ...doc.data(),\r\n        }));\r\n        setQuote(quotes);\r\n      });\r\n\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const unsub = firebase\r\n      .firestore()\r\n      .collection(\"note\")\r\n      .onSnapshot((snapshot) => {\r\n        const activeNote = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        }));\r\n        setNote(activeNote);\r\n      });\r\n\r\n    return () => unsub();\r\n  }, []);\r\n\r\n  async function refreshData(e) {\r\n    const unsub = await firebase\r\n      .firestore()\r\n      .collection(\"planner\")\r\n      .get()\r\n      .then((query) => {\r\n        query.forEach((doc) => {\r\n          doc.ref.update({\r\n            log: 0,\r\n            progress: \" \",\r\n            title: doc.data().title,\r\n          });\r\n        });\r\n      });\r\n    firebase\r\n      .firestore()\r\n      .collection(\"note\")\r\n      .get()\r\n      .then((query) => {\r\n        query.forEach((doc) => {\r\n          doc.ref.update({\r\n            extra: \" \",\r\n          });\r\n        });\r\n      });\r\n    window.location.reload();\r\n  }\r\n\r\n  return (\r\n    <div className=\"planner\">\r\n      <div className=\"planner-container\">\r\n        <div className=\"planner-body\">\r\n          <div className=\"planner-header\">\r\n            <h1 className=\"planner-header-h1\">Productivity Planner</h1>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"planner-refresh-btn\"\r\n              onClick={(e) => {\r\n                refreshData(e);\r\n              }}>\r\n              RESET\r\n            </button>\r\n          </div>\r\n          <div className=\"planner-quote\">\r\n            <PlannerQuote quotes={quotes} />\r\n          </div>\r\n          <div className=\"planner-split\">\r\n            {/* -- Planner section */}\r\n            <div className=\"planner-content\">\r\n              {planner.map((plan) => (\r\n                <div className=\"planner-items\" key={plan.id}>\r\n                  <div className=\"planner-item\">\r\n                    <textarea\r\n                      className=\"planner-textarea\"\r\n                      type=\"text\"\r\n                      defaultValue={plan.progress}\r\n                      onBlur={(e) => onChangeProgress(plan.id, e.target.value)}\r\n                      required></textarea>\r\n                    <label className=\"planner-label\">{plan.title}</label>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"planner-progress-item\">\r\n              {planner.map((plan) => (\r\n                <div className=\"planner-item-buttons\" key={plan.id}>\r\n                  <Progress progress={plan.log} currIndex={plan.id} />\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"planner-pomodoro\">\r\n              <Pomodoro />\r\n            </div>\r\n          </div>\r\n          {note.map((item) => (\r\n            <div className=\"planner-note\" key={item.id}>\r\n              <textarea\r\n                key={item.id}\r\n                className=\"planner-note-textarea\"\r\n                defaultValue={item.extra}\r\n                onBlur={(e) =>\r\n                  onNoteChange(item.id, e.target.value)\r\n                }></textarea>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlannerBody;\r\n","import React from \"react\";\r\nimport PlannerBody from \"../plannerComponents/PlannerBody\";\r\nimport { PlannerPomo } from \"../plannerComponents/PlannerPomo\";\r\n\r\nfunction Planner() {\r\n  return <PlannerBody />;\r\n}\r\n\r\nexport default Planner;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Home from \"./components/pages/Home\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport PnL from \"./components/PnL\";\r\nimport Planner from \"./components/pages/Planner\";\r\nimport { TimeProvider } from \"./components/plannerComponents/pomodoro/TimerProvider\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Navbar />\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Home} />\r\n          <Route path=\"/pnl\" exact component={PnL} />\r\n          <Route\r\n            path=\"/planner\"\r\n            render={(props) => (\r\n              <TimeProvider>\r\n                <Planner {...props} />\r\n              </TimeProvider>\r\n            )}\r\n          />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState: {\r\n    value: 0,\r\n  },\r\n  reducers: {\r\n    increment: state => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1;\r\n    },\r\n    decrement: state => {\r\n      state.value -= 1;\r\n    },\r\n    incrementByAmount: (state, action) => {\r\n      state.value += action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched\r\nexport const incrementAsync = amount => dispatch => {\r\n  setTimeout(() => {\r\n    dispatch(incrementByAmount(amount));\r\n  }, 1000);\r\n};\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectCount = state => state.counter.value;\r\n\r\nexport default counterSlice.reducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport counterReducer from '../features/counter/counterSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    counter: counterReducer,\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport store from \"./app/store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}